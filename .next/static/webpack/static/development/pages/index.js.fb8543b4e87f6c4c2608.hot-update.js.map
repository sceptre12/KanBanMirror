{"version":3,"file":"static/webpack/static/development/pages/index.js.fb8543b4e87f6c4c2608.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {Component,Fragment} from 'react';\nimport Head from 'next/head'\n\nimport openSocket from 'socket.io-client';\nimport QRCode from 'qrcode.react'\nimport './App.css';\n\n\nclass  App extends Component {\n  static getInitialProps({query}){\n    return {query}\n  }\n  constructor(props){\n    super(props)\n    this.state ={\n      hasConnectionEstablished: false,\n      host: '10.0.0.17:8703',\n    }\n    this.socket = {}\n  }\n\n  componentDidMount() {\n    const {ipAddress, port} = this.props.query\n    const host = `${ipAddress}:${port}`\n    try{\n      this.socket = openSocket(host)\n      this.setState({\n        hasConnectionEstablished: true,\n        host\n      }, ()=>{\n        this.__socketListeners()\n      })\n    }catch(e){\n      console.error(e)\n    }\n  }\n\n  /**\n   * TODO attach more listeners here\n   * @private\n   */\n  __socketListeners = () =>{\n    this.socket.on('news', result =>{\n      console.log(result)\n    })\n  }\n\n\n  render(){\n\n    const {host,hasConnectionEstablished} = this.state\n    return (\n        <Fragment>\n          <Head>\n            <title>Smart Kan</title>\n            <meta\n                name=\"viewport\"\n                content=\"initial-scale=1.0, width=device-width\"\n                key=\"viewport\"\n            />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                crossOrigin=\"anonymous\"\n            />\n          </Head>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              Smart Kan\n            </h1>\n            {\n              hasConnectionEstablished?  <QRCode value={host.toString()} size={200} />: null\n            }\n            {\n              hasConnectionEstablished? (<p>\n                Scan to connect to this display\n              </p>) : (\n                  <div>\n                    Waiting on Connection to be established\n                  </div>\n              )\n            }\n\n          </header>\n        </div>\n        </Fragment>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AACA;AACA;AACA;AACA;AAhCA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAWA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAgBA;;;;AAjFA;AACA;AAmFA;;;;A","sourceRoot":""}